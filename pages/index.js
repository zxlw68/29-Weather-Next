import Head from 'next/head'
import axios from 'axios'
import { useState } from 'react'
import Image from 'next/image'
import { BsSearch } from 'react-icons/bs'
import Weather from '../components/Weather'
import Spinner from '../components/Spinner'

export default function Home() {
  const [city, setCity] = useState('')

  const [weather, setWeather] = useState({
    coord: {
      lon: -0.1257,
      lat: 51.5085,
    },
    weather: [
      {
        id: 804,
        main: 'Clouds',
        description: 'overcast clouds',
        icon: '04d',
      },
    ],
    base: 'stations',
    main: {
      temp: 17.44,
      feels_like: 16.83,
      temp_min: 13.75,
      temp_max: 20.15,
      pressure: 1030,
      humidity: 61,
    },
    visibility: 10000,
    wind: {
      speed: 5.66,
      deg: 60,
    },
    clouds: {
      all: 100,
    },
    dt: 1685455252,
    sys: {
      type: 2,
      id: 268730,
      country: 'GB',
      sunrise: 1685418671,
      sunset: 1685477108,
    },
    timezone: 3600,
    id: 2643743,
    name: 'London',
    cod: 200,
  })

  const [loading, setLoading] = useState(false)

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}&units=metric`

  const fetchWeather = (e) => {
    e.preventDefault()
    setLoading(true)
    axios.get(url).then((response) => {
      setWeather(response.data)
      // console.log(response.data)
    })
    setCity('')
    setLoading(false)
  }

  if (loading) {
    return <Spinner />
  } else {
    return (
      <div>
        <Head>
          <title>Weather</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>

        {/* overlay */}

        <div className='bg-black/10 absolute top-0  left-0 right-0 bottom-0 z-[1]' />

        {/* background image */}

        <Image
          src='/quino-al-mBQIfKlvowM-unsplash.jpg'
          fill
          // fill to the parent container
          alt='img'
          className='object-cover'
          // maintain aspect ratio
        />

        {/* SEARCH */}

        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto p-4 text-white z-10 '>
          <form
            onSubmit={fetchWeather}
            // click the button, run fetchWeather()
            className='flex justify-between items-center w-full m-auto p-3 bg-transparent border borde-gray-300 text-white rounded-2xl'
          >
            <input
              onChange={(e) => {
                setCity(e.target.value)
              }}
              type='text'
              placeholder='Search City'
              className='bg-transparent border-none focus:outline-none text-white placeholder:text-white w-full'
            />
            <button onClick={fetchWeather}>
              <BsSearch size={20} />
            </button>
          </form>
        </div>

        {/* Weather */}

        {/* {weather.main && <Weather data={weather} />} */}
        <Weather data={weather} />
      </div>
    )
  }
}
